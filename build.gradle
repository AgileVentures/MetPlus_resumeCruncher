buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/release' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.7.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'application'

jar {
    baseName = 'curriculum'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'org.metplus'
version = '0.1.0'

dependencies {
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    repositories {
        mavenCentral()
        maven {
            url 'https://repo.spring.io/release'
        }
    }
    dependencies {
        compile('org.springframework.data:spring-data-mongodb')
        testCompile("org.springframework.boot:spring-boot-starter-test")

    }
    test {
        environment 'SPRING_PROFILES_ACTIVE', System.env.SPRING_PROFILES_ACTIVE != null ? System.env.SPRING_PROFILES_ACTIVE : "development"
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
        dependsOn 'cleanTest'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}


task copyLicense {
    outputs.file new File("$buildDir/LICENSE.md")
    doLast {
        copy {
            from "LICENSE.md"
            into "$buildDir"
        }
    }
}


applicationDistribution.from(copyLicense) {
    into ""
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

task stage {
}
stage.dependsOn(":app:stage")

applicationDistribution.with {
  // Exclude defaults in lieu of fat jar
  exclude { it.file in configurations.runtime.files }
  from("src/main/conf") { into "conf" }
}
