buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://repo.spring.io/release'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'curriculum'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
}

//System.env.SPRING_PROFILES_ACTIVE = System.env.SPRING_PROFILES_ACTIVE != null ? System.env.SPRING_PROFILES_ACTIVE : "development"

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    repositories {
        mavenCentral()
        maven {
            url 'https://repo.spring.io/release'
        }
    }
    dependencies {
        compile('org.springframework.data:spring-data-mongodb:1.7.2.RELEASE')
        testCompile("junit:junit")
        //compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.3'
        //compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'
        //testCompile group: 'org.springframework', name: 'spring-test', version: springversion
        testCompile("org.springframework:spring-test:4.2.0.RELEASE")
        testCompile('org.mockito:mockito-all:1.10.19')

    }
    test {
        environment 'SPRING_PROFILES_ACTIVE', System.env.SPRING_PROFILES_ACTIVE != null ? System.env.SPRING_PROFILES_ACTIVE : "development"
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
        dependsOn 'cleanTest'
    }
}


task copyLicense {
    outputs.file new File("$buildDir/LICENSE.md")
    doLast {
        copy {
            from "LICENSE.md"
            into "$buildDir"
        }
    }
}


applicationDistribution.from(copyLicense) {
    into ""
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

